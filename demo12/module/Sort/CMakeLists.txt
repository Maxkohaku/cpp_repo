cmake_minimum_required(VERSION 3.0.0)
project(app)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(SORT_LIB_SHARED Sort)
set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib)
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()
if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    message(STATUS "Configuring for Debug")
    set(CMAKE_CXX_FLAGS_DEBUG "-g")
else()
    message(STATUS "Configuring for Release")
    set(CMAKE_CXX_FLAGS_RELEASE "-O3")
endif()
file(GLOB_RECURSE SOURCES_FILES ${CMAKE_CURRENT_SOURCE_DIR}/src/**.cpp)
file(GLOB_RECURSE HEAD_FILES 
${CMAKE_CURRENT_SOURCE_DIR}/../**.h
${CMAKE_CURRENT_SOURCE_DIR}/../**.hpp
)
set(HEADER_DIRS "")
foreach(HEADER_FILE ${HEAD_FILES})
    get_filename_component(HEADER_DIR ${HEADER_FILE} DIRECTORY)
    list(APPEND HEADER_DIRS ${HEADER_DIR})
endforeach()
list(REMOVE_DUPLICATES HEADER_DIRS)
file(GLOB_RECURSE LIBS_FILES ${CMAKE_CURRENT_SOURCE_DIR}/../**.so)
set(LIBS_DIRS "")
foreach(LIBS_FILE ${LIBS_FILES})
    get_filename_component(LIBS_DIR ${LIBS_FILE} DIRECTORY)
    list(APPEND LIBS_DIRS ${LIBS_DIR})
endforeach()
list(REMOVE_DUPLICATES LIBS_DIRS)
message("SOURCES_FILES:" ${SOURCES_FILES})
message("HEADER_DIRS:" ${HEADER_DIRS})
message("LIBS_DIRS:" ${LIBS_DIRS})
add_library(${SORT_LIB_SHARED} SHARED ${SOURCES_FILES})
target_include_directories(${SORT_LIB_SHARED} PRIVATE ${HEADER_DIRS})
target_link_directories(${SORT_LIB_SHARED} PRIVATE ${LIBS_DIRS})
target_link_libraries(${SORT_LIB_SHARED} PRIVATE Vector)
if(CMAKE_BUILD_TYPE STREQUAL "Release")
    target_compile_definitions(${SORT_LIB_SHARED} PRIVATE DEBUG=false)
else()
    target_compile_definitions(${SORT_LIB_SHARED} PRIVATE DEBUG=true)
endif()